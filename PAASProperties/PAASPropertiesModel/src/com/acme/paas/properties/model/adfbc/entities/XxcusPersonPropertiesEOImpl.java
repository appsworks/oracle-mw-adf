package com.acme.paas.properties.model.adfbc.entities;

import com.acme.paas.fwk.EntityImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Oct 04 15:52:53 BST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxcusPersonPropertiesEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        PersonPropertyId {
            public Object get(XxcusPersonPropertiesEOImpl obj) {
                return obj.getPersonPropertyId();
            }

            public void put(XxcusPersonPropertiesEOImpl obj, Object value) {
                obj.setPersonPropertyId((DBSequence)value);
            }
        }
        ,
        PersonId {
            public Object get(XxcusPersonPropertiesEOImpl obj) {
                return obj.getPersonId();
            }

            public void put(XxcusPersonPropertiesEOImpl obj, Object value) {
                obj.setPersonId((Number)value);
            }
        }
        ,
        PersonPropertyType {
            public Object get(XxcusPersonPropertiesEOImpl obj) {
                return obj.getPersonPropertyType();
            }

            public void put(XxcusPersonPropertiesEOImpl obj, Object value) {
                obj.setPersonPropertyType((String)value);
            }
        }
        ,
        PersonPropertyValue {
            public Object get(XxcusPersonPropertiesEOImpl obj) {
                return obj.getPersonPropertyValue();
            }

            public void put(XxcusPersonPropertiesEOImpl obj, Object value) {
                obj.setPersonPropertyValue((String)value);
            }
        }
        ,
        Status {
            public Object get(XxcusPersonPropertiesEOImpl obj) {
                return obj.getStatus();
            }

            public void put(XxcusPersonPropertiesEOImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        StartDateActive {
            public Object get(XxcusPersonPropertiesEOImpl obj) {
                return obj.getStartDateActive();
            }

            public void put(XxcusPersonPropertiesEOImpl obj, Object value) {
                obj.setStartDateActive((Date)value);
            }
        }
        ,
        EndDateActive {
            public Object get(XxcusPersonPropertiesEOImpl obj) {
                return obj.getEndDateActive();
            }

            public void put(XxcusPersonPropertiesEOImpl obj, Object value) {
                obj.setEndDateActive((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(XxcusPersonPropertiesEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XxcusPersonPropertiesEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(XxcusPersonPropertiesEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxcusPersonPropertiesEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(XxcusPersonPropertiesEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(XxcusPersonPropertiesEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateLogin {
            public Object get(XxcusPersonPropertiesEOImpl obj) {
                return obj.getLastUpdateLogin();
            }

            public void put(XxcusPersonPropertiesEOImpl obj, Object value) {
                obj.setLastUpdateLogin((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(XxcusPersonPropertiesEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(XxcusPersonPropertiesEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        ObjectVersionNumber {
            public Object get(XxcusPersonPropertiesEOImpl obj) {
                return obj.getObjectVersionNumber();
            }

            public void put(XxcusPersonPropertiesEOImpl obj, Object value) {
                obj.setObjectVersionNumber((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxcusPersonPropertiesEOImpl object);

        public abstract void put(XxcusPersonPropertiesEOImpl object,
                                 Object value);

        public int index() {
            return XxcusPersonPropertiesEOImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return XxcusPersonPropertiesEOImpl.AttributesEnum.firstIndex() + XxcusPersonPropertiesEOImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = XxcusPersonPropertiesEOImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PERSONPROPERTYID = AttributesEnum.PersonPropertyId.index();
    public static final int PERSONID = AttributesEnum.PersonId.index();
    public static final int PERSONPROPERTYTYPE = AttributesEnum.PersonPropertyType.index();
    public static final int PERSONPROPERTYVALUE = AttributesEnum.PersonPropertyValue.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int STARTDATEACTIVE = AttributesEnum.StartDateActive.index();
    public static final int ENDDATEACTIVE = AttributesEnum.EndDateActive.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxcusPersonPropertiesEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.acme.paas.properties.model.adfbc.entities.XxcusPersonPropertiesEO");
    }

    /**
     * Gets the attribute value for PersonPropertyId, using the alias name PersonPropertyId.
     * @return the PersonPropertyId
     */
    public DBSequence getPersonPropertyId() {
        return (DBSequence)getAttributeInternal(PERSONPROPERTYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonPropertyId.
     * @param value value to set the PersonPropertyId
     */
    public void setPersonPropertyId(DBSequence value) {
        setAttributeInternal(PERSONPROPERTYID, value);
    }

    /**
     * Gets the attribute value for PersonId, using the alias name PersonId.
     * @return the PersonId
     */
    public Number getPersonId() {
        return (Number)getAttributeInternal(PERSONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonId.
     * @param value value to set the PersonId
     */
    public void setPersonId(Number value) {
        setAttributeInternal(PERSONID, value);
    }

    /**
     * Gets the attribute value for PersonPropertyType, using the alias name PersonPropertyType.
     * @return the PersonPropertyType
     */
    public String getPersonPropertyType() {
        return (String)getAttributeInternal(PERSONPROPERTYTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonPropertyType.
     * @param value value to set the PersonPropertyType
     */
    public void setPersonPropertyType(String value) {
        setAttributeInternal(PERSONPROPERTYTYPE, value);
    }

    /**
     * Gets the attribute value for PersonPropertyValue, using the alias name PersonPropertyValue.
     * @return the PersonPropertyValue
     */
    public String getPersonPropertyValue() {
        return (String)getAttributeInternal(PERSONPROPERTYVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonPropertyValue.
     * @param value value to set the PersonPropertyValue
     */
    public void setPersonPropertyValue(String value) {
        setAttributeInternal(PERSONPROPERTYVALUE, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for StartDateActive, using the alias name StartDateActive.
     * @return the StartDateActive
     */
    public Date getStartDateActive() {
        return (Date)getAttributeInternal(STARTDATEACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartDateActive.
     * @param value value to set the StartDateActive
     */
    public void setStartDateActive(Date value) {
        setAttributeInternal(STARTDATEACTIVE, value);
    }

    /**
     * Gets the attribute value for EndDateActive, using the alias name EndDateActive.
     * @return the EndDateActive
     */
    public Date getEndDateActive() {
        return (Date)getAttributeInternal(ENDDATEACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDateActive.
     * @param value value to set the EndDateActive
     */
    public void setEndDateActive(Date value) {
        setAttributeInternal(ENDDATEACTIVE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number)getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ObjectVersionNumber.
     * @param value value to set the ObjectVersionNumber
     */
    public void setObjectVersionNumber(Number value) {
        setAttributeInternal(OBJECTVERSIONNUMBER, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param personPropertyId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence personPropertyId) {
        return new Key(new Object[]{personPropertyId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }
}
